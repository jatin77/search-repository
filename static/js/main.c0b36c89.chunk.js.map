{"version":3,"sources":["component/navBar/Navbar.js","store/Store.js","component/list/List.js","App.js","index.js"],"names":["connect","state","usersData","inputSearchText","dispatch","handleInputChange","e","type","text","target","value","handleSubmit","query","preventDefault","fetch","concat","then","res","json","data","items","props","react_default","a","createElement","className","onSubmit","placeholder","onChange","initialState","store","createStore","arguments","length","undefined","action","Object","assign","console","log","map","userData","key","id","href","owner","src","alt","html_url","name","description","language","forks_count","App","es","navBar_Navbar","list_List","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.c0b36c89.chunk.js","sourcesContent":["import React from 'react';\r\nimport './navbar.css';\r\nimport { connect } from 'react-redux';\r\nfunction Navbar(props) {\r\n  return (\r\n    <nav>\r\n      <div className='git-logo'>\r\n        <i className='fab fa-github' />\r\n      </div>\r\n      <div className='git-search'>\r\n        <form onSubmit={e => props.handleSubmit(e, props.inputSearchText)}>\r\n          <div className='input'>\r\n            <input\r\n              type='text'\r\n              placeholder='Find a repository'\r\n              value={props.inputSearchText}\r\n              onChange={props.handleInputChange}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    usersData: state.usersData,\r\n    inputSearchText: state.inputSearchText\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    handleInputChange: e => {\r\n      dispatch({ type: 'INPUT_SEARCH', text: e.target.value });\r\n    },\r\n\r\n    handleSubmit: (e, query) => {\r\n      e.preventDefault();\r\n      if (query !== '') {\r\n        fetch(`https://api.github.com/search/repositories?q=${query}`)\r\n          .then(res => res.json())\r\n          .then(data => {\r\n            dispatch({ type: 'SET_USERSDATA', usersData: data.items });\r\n          });\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Navbar);\r\n","import { createStore } from 'redux';\r\n\r\nconst initialState = {\r\n  usersData: [],\r\n  inputSearchText: ''\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'INPUT_SEARCH':\r\n      return Object.assign({}, state, { inputSearchText: action.text });\r\n    case 'SET_USERSDATA':\r\n      return Object.assign({}, state, { usersData: action.usersData });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './list.css';\r\nfunction List(props) {\r\n  console.log(props.usersData);\r\n  let imgUrl = 'https://avatars.githubusercontent.com/u/';\r\n  return (\r\n    <div className='list'>\r\n      <ul className='list-items'>\r\n        {props.usersData.map(userData => (\r\n          <li key={userData.id}>\r\n            <div className='user'>\r\n              <a className='user_link' href={userData.owner['html_url']}>\r\n                <img src={`${imgUrl}` + userData.id} alt='User Image' />\r\n                <h1>{userData.owner['login']}</h1>\r\n              </a>\r\n            </div>\r\n            <div className=\"repo-name repo\">\r\n            <a href={userData.html_url} target='_blank'>\r\n              <p>\r\n                {' '}\r\n                <span>Repo name </span> {userData.name}\r\n              </p>\r\n            </a>\r\n            </div>\r\n            <div className=\"repo-desc repo\">\r\n            <p>\r\n              <span>Repo Description </span> {userData.description}\r\n            </p>\r\n            </div>\r\n            <div className=\"repo-lang repo\">\r\n            <p>\r\n              <span>Language </span> {userData.language}\r\n            </p>\r\n            </div>\r\n            <div className=\"repo-forks repo\">\r\n            <p>\r\n              <span>Forks </span>\r\n              {userData.forks_count}\r\n            </p>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    usersData: state.usersData,\r\n    inputSearchText: state.inputSearchText\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(List);\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Navbar from './component/navBar/Navbar';\nimport { Provider } from 'react-redux';\nimport store from './store/Store';\nimport List from './component/list/List';\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <div className='App'>\n          <Navbar />\n          <List />\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}